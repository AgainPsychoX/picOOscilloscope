; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:pico]
platform = raspberrypi
board = pico

framework = arduino
lib_deps = bodmer/TFT_eSPI@^2.4.79
build_unflags = 
	-Wall -Wextra -Wpedantic -Wvla ; hide warnings from framework & libraries
build_flags =
	; TFT driver configuration
	-DUSER_SETUP_LOADED=1
	-DST7796_DRIVER=1
	-DTFT_WIDTH=320
	-DTFT_HEIGHT=480
	-DTFT_MISO=4
	-DTFT_MOSI=3
	-DTFT_SCLK=2
	-DTFT_CS=5
	-DTFT_DC=7
	-DTFT_RST=6
	;-DTFT_BL=-1 (hardware)
	-DTOUCH_CS=8
	-DLOAD_GLCD=1
	-DLOAD_FONT2=1
	-DLOAD_FONT4=1
	-DLOAD_FONT6=1
	-DLOAD_FONT7=1
	-DLOAD_FONT8=1
	-DLOAD_GFXFF=1
	-DSMOOTH_FONT=1
	-DSPI_FREQUENCY=80000000
	; -DSPI_READ_FREQUENCY=20000000
	; -DSPI_TOUCH_FREQUENCY=2500000

	; Explicitly add toolchain headers (list from 'arm-none-eabi-g++.exe -v') to fix VS Code IntelliSense
	; List from `arm-none-eabi-g++.exe -v`, section `#include <...> search starts here`.
	-isystem $PROJECT_CORE_DIR/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.3.1
	-isystem $PROJECT_CORE_DIR/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.3.1/arm-none-eabi
	-isystem $PROJECT_CORE_DIR/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.3.1/backward
	-isystem $PROJECT_CORE_DIR/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.3.1/include
	-isystem $PROJECT_CORE_DIR/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.3.1/include-fixed
	-isystem $PROJECT_CORE_DIR/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include
build_src_flags = 
	-Wall -Wextra -Wpedantic

upload_protocol = picotool
extra_scripts = 
	scripts/convert_sysincludes.py ; hide warnings from framework & libraries

monitor_speed = 115200
